{
  "hash": "39cf2f0d38586d8520d5e260ab1896f2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home_Ex01: Investigating Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex at June 2024 by Data Visualisations\"\nauthor: \"Hoa Nguyen Phuong\"\nformat: html\ndate-modified: \"last-modified\" \nexecute:\n  echo: true \n  eval: true \n  warning: false \n  freeze: true\n---\n\n\n\n# [Part 1 - Individual Data Visualisation and Analysis]{style=\"color:mediumvioletred\"}\n\n# [1]{style=\"color:mediumvioletred\"} Overview\n\n## [1.1]{style=\"color:mediumvioletred\"} Background\n\nThe Singapore Department of Statistics regularly publishes data to provide a comprehensive view of the nation’s demographic landscape. One such dataset, Singapore Residents by Planning Area/Subzone, Single Year of Age and Sex (June 2024), offers granular insights into the spatial and age-sex distribution of Singapore’s resident population in 2024. It captures critical population attributes down to single years of age, disaggregated by gender and geographically mapped across planning areas and subzones defined under the Urban Redevelopment Authority’s Master Plan 2019.\n\nThese statistics serve as a foundational reference for urban planners, policymakers, and researchers to assess trends in population ageing, gender balance, and regional population concentration. In particular, they support decisions on infrastructure planning, public service allocation, and housing development strategies. Understanding the demographic structure in such detail allows for better anticipation of future needs across education, healthcare, and eldercare.\n\n## [1.2]{style=\"color:mediumvioletred\"} The Task\n\nAssuming the role of the graphical editor at a local media company, the task is to create compelling visualizations that highlight Singapore’s demographic structures and distribution in 2024. Using appropriate Exploratory Data Analysis (EDA) techniques and ggplot2, this post aims to:\n\n• Uncover the age and sex distribution across Singapore’s planning areas and subzones.\n\n• Identify population concentration hotspots and patterns of demographic imbalance.\n\n• Convey insights through at most three clear and informative data visualisations suitable for a general audience in a digital publication.\n\n# [2]{style=\"color:mediumvioletred\"} Loading Packages\n\nThe following code chunk uses `p_load()` of [**pacman**](https://rpubs.com/akshaypatankar/594834) package to check if tidyverse packages are installed in the computer. If they are, the libraries will be called into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  tidyverse, ggplot2, haven, knitr, patchwork, ggthemes, scales, \n  ggridges, ggpubr, gganimate, ggdist, ggtext, ggalt, ggExtra, cowplot, \n  ggnewscale, colorspace, magrittr, RColorBrewer, ggstatsplot, egg, \n  geomtextpath, readxl, performance, parameters, see, ggiraph, \n  treemap, treemapify\n)\n```\n:::\n\n\n\n# [3]{style=\"color:mediumvioletred\"} Preparing Data\n\nThe dataset **Singapore Residents by Planning Area/Subzone, Single Year of Age and Sex** **(June 2024)** is obtained from the Singapore Department of Statistics. It provides detailed demographic information on residents by planning area and subzone, segmented by age and sex as of June 2024. Each row in the dataset represents a specific demographic group within a given planning area, making it suitable for visualising population distribution and structure across the country.\n\n## [3.1]{style=\"color:mediumvioletred\"} Importing File and Cheking\n\n### [3.1.1]{style=\"color:mediumvioletred\"} Importing File\n\nThe code chunk below is used to import the dataset (csv file) using `read_csv()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop <- read_csv(\"respopagesex2024/respopagesex2024.csv\")\n```\n:::\n\n\n\n### [3.1.2]{style=\"color:mediumvioletred\"} Scanning the Data\n\nNext, for a better understanding of the dataset, `glimpse()` will be utilized to observe the variables and their data types:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(respop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n\nAs shown, the dataset consists of 6 columns and over 60,424 rows (observations). Each observation represents a specific demographic segment of Singapore’s resident population, defined by:\n\n-   **PA**: Planning Area\n\n-   **SZ**: Subzone\n\n-   **Age**: Single year of age (0–90+)\n\n-   **Sex**: Male or Female\n\nBased on the output of the code, there are 4 categorical variables (PA, SZ, Age, and Sex), 1 numerical variable (Pop), and 1 time variable (Time).\n\n### [3.1.3]{style=\"color:mediumvioletred\"} Checking for Duplicates\n\nTo ensure data integrity, a check for duplicated records was conducted. Duplicated entries can result in inaccurate analysis due to double counting. The following code block uses `group_by_all()` and `filter(n()\\>1)` from the dplyr package to identify fully duplicated rows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- respop %>%\n  group_by_all() %>%\n  filter(n() > 1) %>%\n  ungroup()\n\nduplicate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 6\n# ℹ 6 variables: PA <chr>, SZ <chr>, Age <chr>, Sex <chr>, Pop <dbl>,\n#   Time <dbl>\n```\n\n\n:::\n:::\n\n\n\nThe result confirms that no duplicated rows exist.\n\nTo further verify that each record is unique, the number of distinct combinations across the key demographic variables (PA, SZ, Age, Sex, and Time) was computed:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_distinct(respop %>% select(PA, SZ, Age, Sex, Time))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60424\n```\n\n\n:::\n:::\n\n\n\nThis confirms that all 60,424 rows in the dataset represent unique combinations, with no repetition across the key variables.\n\n### [3.1.4]{style=\"color:mediumvioletred\"} Checking for Missing Values\n\nBefore proceeding with the analysis, it is also important to verify whether the dataset contains any missing values, as these may influence the accuracy and integrity of results.\n\nAn initial check was conducted using `is.na()` and `sum()` to detect any missing entries:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(is.na(respop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ninteger(0)\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(is.na(respop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\nThis confirms that there are no missing values in the dataset. All six variables (PA, SZ, AG, SEX, Pop, and Time) are complete and require no additional cleaning or row removal. Thus, the dataset is ready for subsequent analysis without further preprocessing.\n\n## [3.2]{style=\"color:mediumvioletred\"} Data Wrangling\n\n### [3.2.1]{style=\"color:mediumvioletred\"} Selecting Variables\n\nVariable selection is a common step in data analysis, particularly when working with datasets containing numerous attributes—some of which may be redundant depending on the analysis objectives. However, the `respopagesex2024` dataset is already well-structured and concise, consisting of six essential variables:\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n<tr><th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; font-weight: bold; color: rgba(34, 34, 34, 255) !important;font-size: 16px;\" colspan=\"5\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Description of Variables in the `respopagesex` Dataset</div></th></tr>\n  <tr>\n   <th style=\"text-align:left;font-weight: bold;\"> Category </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Variable.Name </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Description </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Type </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Geography </td>\n   <td style=\"text-align:left;\"> PA </td>\n   <td style=\"text-align:left;\"> Planning Area </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Geography </td>\n   <td style=\"text-align:left;\"> SZ </td>\n   <td style=\"text-align:left;\"> Subzone </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio Town Centre </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Demographics </td>\n   <td style=\"text-align:left;\"> Age </td>\n   <td style=\"text-align:left;\"> Age (single year of age) </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> 0 to 90+ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Demographics </td>\n   <td style=\"text-align:left;\"> Sex </td>\n   <td style=\"text-align:left;\"> Gender </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> Males, Females </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Demographics </td>\n   <td style=\"text-align:left;\"> Pop </td>\n   <td style=\"text-align:left;\"> Resident count (Rounded to nearest 10) </td>\n   <td style=\"text-align:left;\"> dbl </td>\n   <td style=\"text-align:left;\"> 0, 10, 20, 30, ..., 1180 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Metadata </td>\n   <td style=\"text-align:left;\"> Time </td>\n   <td style=\"text-align:left;\"> Year of observation </td>\n   <td style=\"text-align:left;\"> dbl </td>\n   <td style=\"text-align:left;\"> 2024 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop_description <- data.frame(\n  Category = c(\"Geography\", \"Geography\", \"Demographics\", \"Demographics\", \"Demographics\", \"Metadata\"),\n  `Variable Name` = c(\"PA\", \"SZ\", \"Age\", \"Sex\", \"Pop\", \"Time\"),\n  Description = c(\"Planning Area\",\n                  \"Subzone\",\n                  \"Age (single year of age)\",\n                  \"Gender\",\n                  \"Resident count (Rounded to nearest 10)\",\n                  \"Year of observation\"),\n  Type = c(\"char\", \"char\", \"char\", \"char\", \"dbl\", \"dbl\"),\n  Value = c(\"e.g. Ang Mo Kio\",\n            \"e.g. Ang Mo Kio Town Centre\",\n            \"0 to 90+\",\n            \"Males, Females\",\n            \"0, 10, 20, 30, ..., 1180\",\n            \"2024\")\n)\n\nlibrary(kableExtra)\n\nkable(respop_description) %>%\n  kable_styling(full_width = FALSE) %>%\n  row_spec(0, bold = TRUE) %>%\n  add_header_above(c(\"Description of Variables in the `respopagesex` Dataset\" = ncol(respop_description)), \n                   bold = TRUE, font_size = 16, color = \"#222222\")\n```\n:::\n\n\n:::\n\nWhile the Time column contains only a single value (2024), indicating that the dataset reflects the demographic structure of Singapore for year 2024, it was retained to support reproducibility. This ensures compatibility should additional years be introduced in the future. As such, no variables were removed or renamed during the data preparation phase.\n\n### [3.2.2]{style=\"color:mediumvioletred\"} Correcting Data Types\n\nAs shown above, the current data types of the variables are:\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n<tr><th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; font-weight: bold; color: rgba(34, 34, 34, 255) !important;font-size: 16px;\" colspan=\"4\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Description of Variables in the `respopagesex` Dataset</div></th></tr>\n  <tr>\n   <th style=\"text-align:left;font-weight: bold;\"> Variable.Name </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Description </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Type </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> PA </td>\n   <td style=\"text-align:left;\"> Planning Area </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SZ </td>\n   <td style=\"text-align:left;\"> Subzone </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio Town Centre </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Age </td>\n   <td style=\"text-align:left;\"> Age (single year of age) </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> 0 to 90+ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sex </td>\n   <td style=\"text-align:left;\"> Gender </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> Males, Females </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Pop </td>\n   <td style=\"text-align:left;\"> Resident count (Rounded to nearest 10) </td>\n   <td style=\"text-align:left;\"> dbl </td>\n   <td style=\"text-align:left;\"> 0, 10, 20, 30, ..., 1180 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Time </td>\n   <td style=\"text-align:left;\"> Year of observation </td>\n   <td style=\"text-align:left;\"> dbl </td>\n   <td style=\"text-align:left;\"> 2024 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop_description <- data.frame(\n  `Variable Name` = c(\"PA\", \"SZ\", \"Age\", \"Sex\", \"Pop\", \"Time\"),\n  Description = c(\"Planning Area\",\n                  \"Subzone\",\n                  \"Age (single year of age)\",\n                  \"Gender\",\n                  \"Resident count (Rounded to nearest 10)\",\n                  \"Year of observation\"),\n  Type = c(\"char\", \"char\", \"char\", \"char\", \"dbl\", \"dbl\"),\n  Value = c(\"e.g. Ang Mo Kio\",\n            \"e.g. Ang Mo Kio Town Centre\",\n            \"0 to 90+\",\n            \"Males, Females\",\n            \"0, 10, 20, 30, ..., 1180\",\n            \"2024\")\n)\n\nlibrary(kableExtra)\n\nkable(respop_description) %>%\n  kable_styling(full_width = FALSE) %>%\n  row_spec(0, bold = TRUE) %>%\n  add_header_above(c(\"Description of Variables in the `respopagesex` Dataset\" = ncol(respop_description)), \n                   bold = TRUE, font_size = 16, color = \"#222222\")\n```\n:::\n\n\n:::\n\nThe first four variables (**PA**, **SZ**, **Age**, **Sex**), all are currently typed as character (`char`). While character and factor are both used to store categorical values in R, their purposes differ:\n\n• character is more flexible for free-form text, such as names or labels that may change over time.\n\n• factor is more structured and suited for categorical data with a known, limited set of possible values, often used for grouping or plotting.\n\nGiven this distinction:\n\n• **PA** (Planning Area), **SZ** (Subzone), and **Age** (Age) are correctly stored as character since they represent a wide range of labels or identifiers that are not necessarily fixed.\n\n• **Sex**, however, only contains a small set of known categories (“Males”, “Females”), and is better modeled as a factor for consistency in grouping, analysis, and visualization.\n\nTo reflect this, the following code converts the **Sex** column to factor type:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop$Sex <- factor(respop$Sex, levels = c(\"Males\", \"Females\"))\n```\n:::\n\n\n\nThis change ensures that Sex is treated as a proper categorical variable in downstream analysis and plotting.\n\nThe last two variables, **Pop** and **Time**, were initially stored as double-precision numeric values (`dbl`), which is the default numeric type in R for both whole numbers and decimals. However, since both variables contain only whole numbers, it is more semantically accurate and memory-efficient to convert them to integer (`int`) type.\n\n-   **Pop**, which stores resident population counts (rounded to the nearest 10), holds only whole number values. Converting it to integer reinforces its role as a count-based measure.\n\n-   **Time** represents the year of observation and contains a single repeated value (2024). Converting it to integer clarifies its role as a discrete temporal marker.\n\nThe conversion is performed using `as.integer()` as follows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop$Time <- as.integer(respop$Time)\nrespop$Pop <- as.integer(respop$Pop)\n```\n:::\n\n\n\nAfter applying the necessary type corrections, the variables and their data types are now summarized below:\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n<tr><th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; font-weight: bold; color: rgba(34, 34, 34, 255) !important;font-size: 16px;\" colspan=\"4\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Revised Description of Variables in the `respopagesex` Dataset</div></th></tr>\n  <tr>\n   <th style=\"text-align:left;font-weight: bold;\"> Variable.Name </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Description </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Type </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> PA </td>\n   <td style=\"text-align:left;\"> Planning Area </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SZ </td>\n   <td style=\"text-align:left;\"> Subzone </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio Town Centre </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Age </td>\n   <td style=\"text-align:left;\"> Age (single year of age) </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> 0 to 90+ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sex </td>\n   <td style=\"text-align:left;\"> Gender </td>\n   <td style=\"text-align:left;\"> fct </td>\n   <td style=\"text-align:left;\"> Males, Females </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Pop </td>\n   <td style=\"text-align:left;\"> Resident count (Rounded to nearest 10) </td>\n   <td style=\"text-align:left;\"> int </td>\n   <td style=\"text-align:left;\"> 0, 10, 20, 30, ..., 1180 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Time </td>\n   <td style=\"text-align:left;\"> Year of observation </td>\n   <td style=\"text-align:left;\"> int </td>\n   <td style=\"text-align:left;\"> 2024 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell ecval='false'}\n\n```{.r .cell-code}\nrespop_description <- data.frame(\n  `Variable Name` = c(\"PA\", \"SZ\", \"Age\", \"Sex\", \"Pop\", \"Time\"),\n  Description = c(\"Planning Area\",\n                  \"Subzone\",\n                  \"Age (single year of age)\",\n                  \"Gender\",\n                  \"Resident count (Rounded to nearest 10)\",\n                  \"Year of observation\"),\n  Type = c(\"char\", \"char\", \"char\", \"fct\", \"int\", \"int\"),\n  Value = c(\"e.g. Ang Mo Kio\",\n            \"e.g. Ang Mo Kio Town Centre\",\n            \"0 to 90+\",\n            \"Males, Females\",\n            \"0, 10, 20, 30, ..., 1180\",\n            \"2024\")\n)\n\nlibrary(kableExtra)\n\nkable(respop_description) %>%\n  kable_styling(full_width = FALSE) %>%\n  row_spec(0, bold = TRUE) %>%\n  add_header_above(c(\"Revised Description of Variables in the `respopagesex` Dataset\" = ncol(respop_description)), \n                   bold = TRUE, font_size = 16, color = \"#222222\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n<tr><th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; font-weight: bold; color: rgba(34, 34, 34, 255) !important;font-size: 16px;\" colspan=\"4\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Revised Description of Variables in the `respopagesex` Dataset</div></th></tr>\n  <tr>\n   <th style=\"text-align:left;font-weight: bold;\"> Variable.Name </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Description </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Type </th>\n   <th style=\"text-align:left;font-weight: bold;\"> Value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> PA </td>\n   <td style=\"text-align:left;\"> Planning Area </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SZ </td>\n   <td style=\"text-align:left;\"> Subzone </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> e.g. Ang Mo Kio Town Centre </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Age </td>\n   <td style=\"text-align:left;\"> Age (single year of age) </td>\n   <td style=\"text-align:left;\"> char </td>\n   <td style=\"text-align:left;\"> 0 to 90+ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sex </td>\n   <td style=\"text-align:left;\"> Gender </td>\n   <td style=\"text-align:left;\"> fct </td>\n   <td style=\"text-align:left;\"> Males, Females </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Pop </td>\n   <td style=\"text-align:left;\"> Resident count (Rounded to nearest 10) </td>\n   <td style=\"text-align:left;\"> int </td>\n   <td style=\"text-align:left;\"> 0, 10, 20, 30, ..., 1180 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Time </td>\n   <td style=\"text-align:left;\"> Year of observation </td>\n   <td style=\"text-align:left;\"> int </td>\n   <td style=\"text-align:left;\"> 2024 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\nThis can be confirmed via:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(respop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <fct> Males, Females, Males, Females, Males, Females, Males, Females, M…\n$ Pop  <int> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <int> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n\n### [3.2.3]{style=\"color:mediumvioletred\"} Creating New Variables\n\nTo facilitate age-based demographic analysis, a new variable Age_Group was created by binning the Age field into 10-year intervals. This transformation enables grouped aggregation and more interpretable visualizations.\n\nThe Age variable in the dataset is stored as a character string, containing values such as \"0\", \"1\", …, \"89\", and \"90_and_Over\". Using `mutate()` and `case_when()` from the dplyr package, each age was categorized into its respective age band, ranging from \"0-9\" up to \"90+\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop <- respop %>%\n  mutate(Age_Group = case_when(\n    Age %in% as.character(0:9) ~ \"0-9\",\n    Age %in% as.character(10:19) ~ \"10-19\",\n    Age %in% as.character(20:29) ~ \"20-29\",\n    Age %in% as.character(30:39) ~ \"30-39\",\n    Age %in% as.character(40:49) ~ \"40-49\",\n    Age %in% as.character(50:59) ~ \"50-59\",\n    Age %in% as.character(60:69) ~ \"60-69\",\n    Age %in% as.character(70:79) ~ \"70-79\",\n    Age %in% as.character(80:89) ~ \"80-89\",\n    Age == \"90_and_Over\" ~ \"90+\"\n  ))\n```\n:::\n\n\n\nAfter this transformation, the dataset now includes a new column Age_Group, which categorizes each individual into broader age segments, supporting age-grouped aggregation for subsequent visual and statistical analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse (respop)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 7\n$ PA        <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang…\n$ SZ        <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo …\n$ Age       <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", …\n$ Sex       <fct> Males, Females, Males, Females, Males, Females, Males, Femal…\n$ Pop       <int> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, …\n$ Time      <int> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, …\n$ Age_Group <chr> \"0-9\", \"0-9\", \"0-9\", \"0-9\", \"0-9\", \"0-9\", \"0-9\", \"0-9\", \"0-9…\n```\n\n\n:::\n:::\n\n\n\n# [4]{style=\"color:mediumvioletred\"} Demographic Structures and Distribution of Singapore (2024)\n\nThis section explores Singapore's demographic composition in 2024 using the variables from the `respopagesex2024` dataset: age group, gender, and planning area. Two of the charts present univariate distributions—population by age group and by planning area—while one chart combines both age group and gender to examine demographic variation across life stages. Together, the charts provide foundational insights into Singapore's demographic landscape in the year 2024.\n\n## [4.1]{style=\"color:mediumvioletred\"} Population by Age Group\n\nTo understand the age structure of the population, a bar chart was generated to visualize the total resident population by single-year age group (Age_Group). The chart displays a clear distribution across age brackets ranging from infancy (age 0) to the elderly population (90+). This allows for the identification of key demographic cohorts, such as school-age children, working-age adults, and seniors.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(respop, aes(x = Age_Group, y = Pop)) +\n  geom_col(fill = \"#4682B4\") +\n  labs(\n    title = \"Singapore Resident Population by Age Groups (2024)\",\n    subtitle = \"Source: Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024\\nby Department of Statistics, Singapore (DOS)\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin = margin(t = 20, r = 40, b = 10, l = 10),\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    plot.subtitle = element_text(hjust = 0.5, size = 10, color = \"grey30\"),\n    axis.text.x = element_text(angle = 90, hjust = 1, size = 11, color = \"black\"),\n    axis.text.y = element_text(size = 11, color = \"black\"),\n    plot.background = element_rect(fill = \"#f5f5f5\", colour = \"#f5f5f5\")\n  ) +\n  scale_y_continuous(labels = scales::comma)\n```\n:::\n\n\n:::\n\nThe visualisations reveal clear patterns in Singapore’s demographic structure in terms of age. The first bar chart shows that the population is concentrated in the working-age groups (30–59), with a notable continuation into the 60–69 group—together forming the largest segments. This suggests a strong labor force base with a significant proportion approaching retirement. Meanwhile, the youngest age groups (0–9, 10–19) and the elderly (70-79, 80–89, and 90+) represent smaller proportions, the former of which points to possibly declining birth rates.\n\nThis age distribution shows that Singapore may face challenges in the future due to its ageing population. For now, the population steadily increases from young adults to those in their 60s, suggesting a stable group of working-age residents. However, there are fewer young people, which raises concerns about whether there will be enough residents to replace the current workforce over time. Also, as the current labor force will be moving into retirement and fewer younger people will enter the workforce, there may be a rise in the number of dependents compared to workers. To prepare for this, Singapore will need long-term planning in areas like healthcare, eldercare, and policies that encourage higher birth rates or even immigration to support future population needs.\n\n## [4.2]{style=\"color:mediumvioletred\"} Population by Gender and Age Group\n\nTo gain further insight into population distribution across age brackets, a grouped bar chart taking gender into account is plotted. This visual groups males and females side-by-side for each age group bin, offering a straightforward comparison across life stages. In this chart, males are represented in blue and females in pink, ensuring clarity and easy interpretation.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(respop, aes(x = Age_Group, y = Pop, fill = Sex)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_manual(values = c(\"Males\" = \"#336699\", \"Females\" = \"#CC3366\")) +\n  labs(\n    title = str_wrap(\"Singapore Resident Population by Age Groups and Gender (2024)\", width = 50),\n    subtitle = \"Source: Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024\\nby Department of Statistics, Singapore (DOS)\",\n    x = NULL,\n    y = NULL,\n    fill = \"Gender\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    plot.subtitle = element_text(hjust = 0.5, size = 10, color = \"grey30\"),\n    axis.text.x = element_text(angle = 90, hjust = 1, size = 11, color = \"black\"),\n    axis.text.y = element_text(size = 11, color = \"black\"),\n    legend.text = element_text(size = 12),\n    plot.background = element_rect(fill = \"#f5f5f5\", colour = \"#f5f5f5\")\n  )\n```\n:::\n\n\n:::\n\nThe gender-disaggregated age distribution highlights both demographic symmetry and divergence across life stages. From ages 0 to 49, the number of males and females is relatively balanced, with only minor variations. However, in the 50–59 age group, females begin to noticeably outnumber males. Although this difference persists, the gap narrows slightly in the 60–69 group and 80-89 group before widening again in the 90+ group, where the disparity is most pronounced—females nearly double the male population. Interestingly, the 70–79 cohort shows a temporary reversal, with males slightly outnumbering females, suggesting that survival rates can vary across specific age bands despite overall trends in female longevity. These patterns reflect Singapore’s broader demographic trajectory: gender parity during early and working years, and increasing female dominance in the oldest segments. These insights emphasize the importance of gender-responsive planning in healthcare, eldercare, and retirement policy design.\n\n## [4.3]{style=\"color:mediumvioletred\"} Population by Planning Area\n\nThe PA variable, representing Planning Area, was analyzed to understand the spatial distribution of Singapore’s resident population. A horizontal bar chart was plotted, with areas sorted in descending order of population to clearly highlight disparities between more and less densely populated regions. To maintain legibility and avoid overcrowding the chart, only the top 40 planning areas were displayed. This selection provides a view of the most relevant population centers while ensuring the visualization remains clear and interpretable.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop %>%\n  group_by(PA) %>%\n  summarise(Total = sum(Pop)) %>%\n  arrange(desc(Total)) %>%\n  slice_head(n = 40) %>%\n  ggplot(aes(x = reorder(PA, Total), y = Total, fill = Total)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +  # format x-axis (now horizontal due to coord_flip)\n  scale_fill_gradient(low = \"#c6dbef\", high = \"#08306b\") +\n  guides(fill = \"none\") +  # remove legend\n  labs(\n    title = str_wrap(\"Top 40 Planning Areas by Singapore Resident Population (2024)\", width = 60),\n    subtitle = \"Source: Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024\\nby Department of Statistics, Singapore (DOS)\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    plot.subtitle = element_text(hjust = 0.5, size = 10, color = \"grey30\"),\n    axis.text.x = element_text(size = 11, color = \"black\"),\n    axis.text.y = element_text(size = 8, color = \"black\", margin = margin(r = 4)),  # reduce overlap\n    plot.background = element_rect(fill = \"#f5f5f5\", colour = \"#f5f5f5\")\n  )\n```\n:::\n\n\n:::\n\nThis visualisation reveals interesting insights into spatial population concentration in Singapore in 2024. As can be seen from the chart, Tampines, Bedok, and Sengkang emerge as the most populated areas, each exceeding 200,000 residents. In contrast, areas like Western Water Catchment, Sungei Kadut, and Orchard sit at the lower end of the scale. The gradient color fill emphasizes the stark contrast between high- and low-density regions.\n\nRemarkably, just the top 10 planning areas account for over 50% of the total population of these 40 planning areas, while the top 20 hold more than 75% of the residents. This highlights how urban dwellers are heavily concentrated in a limited number of zones. Furthermore, the top 5 areas collectively house more than 10 times the population of the bottom 5 combined, illustrating stark spatial inequality. These insights on the spatial distribution of Singapore residents support targeted infrastructure investment and equitable resource planning across Singapore’s diverse planning areas.\n\n# [5]{style=\"color:mediumvioletred\"} Summary\n\nThis report presents an analysis of Singapore’s resident population in 2024 using the `respopagesex2024` dataset, focusing on three key demographic dimensions: age group, gender, and planning area. Through three tailored visualisations — univariate and bivariate — the report uncovers population patterns that are vital for informing urban planning, social policy, and infrastructure development.\n\n**Key findings:**\n\n• Age Distribution: The population is concentrated in the working-age groups (30–59), suggesting a currently strong labor force. However, smaller proportions in the younger cohorts (0–19) indicate potential challenges in future workforce replacement.\n\n• Gender-Age Dynamics: Gender distribution is relatively balanced up to midlife, with a noticeable shift in the 50–59 age group where females begin to noticeably outnumber males. While this gap narrows slightly in the 60–69 and 80-89 age bands, it widens again sharply in the 90+ group—highlighting gendered longevity differences.\n\n• Spatial Patterns: Tampines, Bedok, and Sengkang are the most populated among the 55 planning areas, each exceeding 200,000 residents. The top 10 planning areas account for over half the population, and the top 20 hold more than 75% of the population.\n\n**Recommendations for future research:**\n\n• Temporal Comparisons: Adding data from previous years would reveal trends in ageing, fertility, and gender distribution.\n\n• Linking Demographic and Socioeconomic Data: Merging this dataset with information on income or housing can reveal how population patterns relate to differences in living standards and whether various groups have fair access to essential services like housing support.\n\n# [6]{style=\"color:mediumvioletred\"} References\n\nDepartment of Statistics Singapore. (2024). *Population Trends 2024*. Retrieved from <https://www.singstat.gov.sg/publications/population/population-trends>\n\nKam, T. S. (2025). *R for visual analytics*. Retrieved from <https://r4va.netlify.app/>\n\nScherer, C. (2025). *Exciting data visualizations with ggplot2 extensions*. Retrieved from <https://z3tt.github.io/exciting-extensions/slides.html#/course-materials>\n\nWickham, H., & Grolemund, G. (2017). *R for Data Science: Import, Tidy, Transform, Visualize, and Model Data*. O’Reilly Media. Retrieved from <https://r4ds.hadley.nz/>\n\n# [Part 2 - Peer Evaluation and Makeover]{style=\"color:mediumvioletred\"}\n\nIn this section, the visualization work submitted by Enrico Sebastian and Andre Ong Jia Kang will be evaluated. For each of the three visualizations, three well-executed design elements will be identified, along with three to four areas identified for improvement. Based on this evaluation, a revised version of each visualization will be developed to address the noted shortcomings while preserving the strengths.\n\n## [Visualisation 1]{style=\"color:mediumvioletred\"} Population by Planning Area (Bar chart by Enrico Sebastian)\n\nThis chart is intended to compare the population distribution across all planning areas in Singapore based on 2024 data. It uses a horizontal bar chart to show which areas are the most and least populated, allowing for a quick visual assessment of population density across the country.\n\n![](images/clipboard-31872337.png)\n\n### ✅ Three Strengths\n\n1.  **Appropriate Choice of Chart Type**\n\nThe use of a bar chart is suitable for this comparison, as it effectively represents population counts by planning area and highlights differences in population magnitude across areas. This makes visual comparisons straightforward and intuitive.\n\n2.  **Effective Use of Horizontal Bars**\n\nHorizontal orientation improves readability, especially given the long planning area names. It is more suitable than vertical bars for categorical data with long labels.\n\n3.  **Clear Title and Axis Labels**\n\nThe chart includes a descriptive title and well-labeled axes, ensuring that viewers understand what the chart represents and what each axis encodes.\n\n### ⚠️ Three Areas for Improvement\n\n1.  **Title and axis values are too small and not visually emphasized**\n\nThe title is small and left-aligned, making it difficult to notice and not visually highlighted. Additionally, the x-axis tick labels (e.g., 100,000; 200,000) are too small, which affects readability.\n\nTo improve this, increase the font size of both the title and axis ticks, and center-align the title to draw the viewer’s attention and better anchor it to the chart.\n\n2.  **Unsorted bars hinder quick comparison**\n\nThe bars are not ordered by population count, as the chart uses a random order for planning areas.\n\nTo improve this, reorder the bars in descending order of population to allow for quicker visual comparison and identification of population extremes.\n\n3.  **Lack of color variation limits interpretability**\n\nThe chart applies the same color to all bars, which flattens the visual presentation and makes it harder to distinguish high-population areas from lower ones. This uniform appearance underplays the variation in population sizes.\n\nTo improve this, apply a population-based color gradient to the bars. Although displaying the exact values on each bar is typically effective for showing precise comparisons, doing so here—where there are 55 bars—would result in visual clutter and significantly reduce readability. Instead, using a gradient—where darker shades represent populations above 200,000, medium shades for 100,000–200,000, and lighter shades for under 100,000—preserves clarity while still visually conveying the relative magnitude of each planning area.\n\n### 🔁 Makeover Version\n\nBelow is the revised version of the original chart, applying all suggested improvements:\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrespop %>%\n  group_by(PA) %>%\n  summarise(Total = sum(Pop)) %>%\n  mutate(Pop_Bin = case_when(\n    Total > 200000 ~ \"> 200,000\",\n    Total > 100000 ~ \"100,000–200,000\",\n    TRUE ~ \"< 100,000\"\n  )) %>%\n  ggplot(aes(x = reorder(PA, Total), y = Total, fill = Pop_Bin)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  scale_fill_manual(\n    values = c(\n      \"< 100,000\" = \"#c6dbef\",\n      \"100,000–200,000\" = \"#6baed6\",\n      \"> 200,000\" = \"#084594\"\n    )\n  ) +\n  guides(fill = guide_legend(title = \"Population Range\")) +\n  labs(\n    title = str_wrap(\"Population by Planning Area (Singapore, 2024)\", width = 60),\n    x = \"Planning Area\",\n    y = \"Population\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.text.x = element_text(size = 11, color = \"black\"),\n    axis.text.y = element_text(size = 6, color = \"black\", margin = margin(r = 4), lineheight = 4.0),\n    legend.title = element_text(face = \"bold\"),\n    legend.position = \"right\",\n    plot.background = element_rect(fill = \"#f5f5f5\", colour = \"#f5f5f5\")\n  )\n```\n:::\n\n\n:::\n\n## [Visualisation 2]{style=\"color:mediumvioletred\"} Population by Age Groups and Gender (Pyramid bar chart by Enrico Sebastian)\n\nThis chart is intended to visualize the distribution of Singapore’s resident population by age group and gender in 2024. It adopts a population pyramid format, with males on one side and females on the other, allowing for direct comparisons of population size across age bands and between genders.\n\n![](images/clipboard-2574726302.png)\n\n### ✅ Three Strengths\n\n1.  **Great Choice of Chart Type**\n\nThe pyramid chart is a strong fit for visualizing a bar chart with two distinct categories—in this case, gender. It enables clear, side-by-side comparison of male and female populations across age groups, making demographic patterns easy to interpret.\n\n2.  **Intuitive Color Coding by Gender**\n\nUsing distinct, contrasting colors for males and females (e.g., orange and light blue) allows for immediate visual differentiation and eliminates ambiguity in interpretation.\n\n3.  **Thoughtful Age Binning Enhances Readability**\n\nInstead of using every single year of age, the data is grouped into 5-year age bands (e.g., 0–4, 5–9, etc.), which reduces visual clutter while preserving the interpretive value of the age distribution. This allows for easier pattern recognition across life stages.\n\n### ⚠️ Four Areas for Improvement\n\n1.  **Title is too small and not visually emphasized**\n\nThe title lacks visual weight and clear association with the chart, making it easy to overlook.\n\nTo improve this, increase the font size, apply bold formatting, and center-align the title to enhance visibility and balance.\n\n2.  **X-axis values should be positive on both sides**\n\nCurrently, the x-axis shows negative values on the left for males, which is unintuitive and may visually imply negative population.\n\nTo improve this, both male and female counts should be shown as positive values while still preserving the mirrored layout. However, as addressed in point 3 below, the makeover version will include value labels on each bar — so displaying detailed axis ticks becomes unnecessary. In such cases, only the central “0” label should be retained for alignment reference, while the other axis values can be hidden. But in scenarios where bar values are not shown, both sides of the axis must display positive tick values for accurate comparison.\n\n3.  **Visual comparison between genders is challenging without data labels**\n\nWhen the two bars for males and females of an age group are nearly equal in length, it becomes difficult to detect subtle differences and thus, comparison.\n\nTo improve this, add numeric labels to each bar to provide precise population values and strengthen readability across age groups.\n\n4.  **Gender colors do not follow common visual conventions**\n\nWhile not explicitly stated, a widely followed practice is to use darker shades (e.g., blue) for males and lighter or warmer tones (e.g., pink, red, or orange) for females. The original version reverses this convention — using orange for males and blue for females — which may feel visually off.\n\nTo improve clarity and maintain intuitive associations, the colors should be reversed to use sky blue for males and salmon or coral for females.\n\n### 🔁 Makeover Version\n\nBelow is the revised version of the original chart, applying all suggested improvements:\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Aggregate by 5-year age bands\npyramid_data <- respop %>%\n  filter(!is.na(Pop)) %>%\n  mutate(Age_Group = case_when(\n    Age %in% as.character(0:4) ~ \"0_to_4\",\n    Age %in% as.character(5:9) ~ \"5_to_9\",\n    Age %in% as.character(10:14) ~ \"10_to_14\",\n    Age %in% as.character(15:19) ~ \"15_to_19\",\n    Age %in% as.character(20:24) ~ \"20_to_24\",\n    Age %in% as.character(25:29) ~ \"25_to_29\",\n    Age %in% as.character(30:34) ~ \"30_to_34\",\n    Age %in% as.character(35:39) ~ \"35_to_39\",\n    Age %in% as.character(40:44) ~ \"40_to_44\",\n    Age %in% as.character(45:49) ~ \"45_to_49\",\n    Age %in% as.character(50:54) ~ \"50_to_54\",\n    Age %in% as.character(55:59) ~ \"55_to_59\",\n    Age %in% as.character(60:64) ~ \"60_to_64\",\n    Age %in% as.character(65:69) ~ \"65_to_69\",\n    Age %in% as.character(70:74) ~ \"70_to_74\",\n    Age %in% as.character(75:79) ~ \"75_to_79\",\n    Age %in% as.character(80:84) ~ \"80_to_84\",\n    Age %in% as.character(85:89) ~ \"85_to_89\",\n    Age == \"90_and_Over\" ~ \"90_and_over\"\n  )) %>%\n  group_by(Age_Group, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# 2. Set proper order of age groups\nage_levels <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\",\n                \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\",\n                \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\npyramid_data$Age_Group <- factor(pyramid_data$Age_Group, levels = age_levels)\n\n# 3. Mirror male population\npyramid_data <- pyramid_data %>%\n  mutate(Pop_plot = ifelse(Sex == \"Males\", -Pop, Pop))\n\n# 4. Plot\nggplot(pyramid_data, aes(x = Age_Group, y = Pop_plot, fill = Sex)) +\n  geom_col(width = 0.9) +\n\n  # Male labels (left side, hjust = 1.1 to push left)\n  geom_text(\n    data = subset(pyramid_data, Sex == \"Males\"),\n    aes(label = comma(abs(Pop_plot))),\n    hjust = 1.1, size = 2.6, color = \"black\"\n  ) +\n\n  # Female labels (right side, hjust = -0.1 to push right)\n  geom_text(\n    data = subset(pyramid_data, Sex == \"Females\"),\n    aes(label = comma(Pop_plot)),\n    hjust = -0.1, size = 2.6, color = \"black\"\n  ) +\n\n  coord_flip() +\n  scale_y_continuous(\n    breaks = 0,\n    labels = \"0\",\n    expand = expansion(mult = c(0.1, 0.1))\n  ) +\n  scale_fill_manual(values = c(\"Males\" = \"skyblue\", \"Females\" = \"salmon\")) +\n  labs(\n    title = \"Population Pyramid (2024)\",\n    x = \"Age Group\",\n    y = \"Population\",\n    fill = \"Gender\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.text.y = element_text(size = 9),\n    axis.text.x = element_text(size = 9),\n    legend.title = element_text(face = \"bold\"),\n    plot.background = element_rect(fill = \"#f5f5f5\", colour = \"#f5f5f5\")\n  )\n```\n:::\n\n\n:::\n\n## [Visualisation 3]{style=\"color:mediumvioletred\"} Population in Tampines's Subzones (Bar chart and Box plot by Andre Ong Jia Kang)\n\nThis visualization is composed of two parts:\n\n• The upper panel shows a horizontal bar chart comparing the total resident population across the top four subzones within the Tampines planning area: Tampines East, West, North, and Simei.\n\n• The lower panel uses boxplots to illustrate the distribution of residents’ ages in each subzone, highlighting the median, interquartile range (IQR), and outliers.\n\nTogether, the panels enable a comparison of both population size and demographic structure across subzones.\n\n![](images/clipboard-1375882205.png)\n\n### ✅ Three Strengths\n\n1.  **Multi-Chart Design Enables Richer Contextual Insight**\n\nBy combining a bar chart and a boxplot in a dual-panel layout, the visualization allows readers to absorb related but distinct information — population size and age distribution — within a single frame. This is more informative than relying on a single-chart visualization.\n\n2.  **Appropriate Graph Selection for Each Variable Type**\n\nThe bar chart provides an intuitive representation of total population counts across subzones, while the boxplots effectively convey the spread, central tendency, and variability of age. In the form of good chart choices, they efficiently deliver both scale and structure of the population.\n\n3.  **Consistent Subzone Ordering Enhances Readability**\n\nThe subzones appear in the same order — Tampines West, North, East, Simei — across both panels. This consistent alignment makes it easy for viewers to navigate between the bar chart and boxplots without confusion.\n\n### ⚠️ Three Areas for Improvement\n\n1.  **Titles of both charts lack emphasis**\n\nThe titles are small and left-aligned, making them easy to overlook.\n\nTo improve this, center-align both titles, apply bold formatting, and increase the font size to enhance visibility and make the purpose of each chart immediately clear.\n\n2.  **Subzone order is unintuitive**\n\nThe current order of subzones does not follow a logical or alphabetical pattern, which can confuse readers when scanning across both visualizations.\n\nTo improve this, reorder the subzones as Tampines East → Tampines North → Tampines West → Simei for a more familiar presentation.\n\n3. \t**Visual redundancy in explanatory note**\n\nThe annotation stating “Bars = total pop; Boxes = age spread” at the bottom right is unnecessary, as this distinction is already evident from the respective chart titles.\n\nTo improve this, remove the note to streamline the visuals and avoid clutter.\n\n4.\t**Inconsistent color usage across charts**\n\nThe bar chart uses a single color for all subzones, while the boxplots use four distinct colors — causing a visual disconnect when trying to compare across both.\n\nTo improve this, assign a distinct color to each subzone and apply it consistently across both charts to support intuitive tracking and comparison.\n\n### 🔁 Makeover Version\n\nBelow is the revised version of the original chart, applying all suggested improvements:\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter Tampines and get top 4 subzones by total population\ntop4_subzones <- respop %>%\n  filter(PA == \"Tampines\") %>%\n  group_by(SZ) %>%\n  summarise(Total = sum(Pop), .groups = \"drop\") %>%\n  arrange(desc(Total)) %>%\n  slice_head(n = 4)\n\ntop4_names <- c(\"Simei\",\"Tampines West\", \"Tampines North\", \"Tampines East\")\n\n# Prepare bar chart data\nbar_data <- top4_subzones %>%\n  filter(SZ %in% top4_names) %>%\n  mutate(SZ = factor(SZ, levels = top4_names))\n\n# Prepare boxplot data\nbox_data <- respop %>%\n  filter(PA == \"Tampines\", SZ %in% top4_names) %>%\n  mutate(\n    Age = ifelse(Age == \"90_and_over\", 90, as.numeric(Age)),\n    SZ = factor(SZ, levels = top4_names)\n  ) %>%\n  select(SZ, Age, Pop) %>%\n  uncount(weights = Pop)\n\n# Define colors\ncolors <- c(\n  \"Tampines East\" = \"#66c2a5\",\n  \"Tampines North\" = \"#8da0cb\",\n  \"Tampines West\" = \"#fc8d62\",\n  \"Simei\" = \"#e78ac3\"\n)\n\n# Create bar chart\nbar_plot <- ggplot(bar_data, aes(x = SZ, y = Total, fill = SZ)) +\n  geom_col(width = 0.7) +\n  scale_fill_manual(values = colors) +\n  coord_flip() +\n  labs(title = \"Total Population – Top 4 Subzones\", x = NULL, y = \"Population\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_text(size = 12),  # enlarged x-axis\n    legend.position = \"none\"\n  ) +\n  scale_y_continuous(labels = comma)\n\n# Create boxplot\nbox_plot <- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_boxplot(width = 0.6, outlier.size = 1) +\n  scale_fill_manual(values = colors) +\n  coord_flip() +\n  labs(title = \"Age Distribution by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_text(size = 12),  # enlarged x-axis\n    legend.position = \"none\"\n  )\n\n# Combine plots\n(bar_plot / box_plot) + plot_layout(heights = c(1, 1))\n```\n:::\n\n\n:::\n\n## [Summary]{style=\"color:mediumvioletred\"}\n\nThrough this peer evaluation and makeover exercise, important design lessons were surfaced—from optimizing chart types for clarity to ensuring visual consistency and interpretability. By carefully analyzing the original strengths and addressing identified weaknesses, each revised visualization now communicates insights more effectively while preserving the intent of the original work.",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}