{
  "hash": "16fc7d9b2e117394deb34fd78e31b865",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on_Ex04(3) - Visualising Uncertainty \"\nauthor: \"Hoa Nguyen Phuong\"\nformat: html\ndate-modified: \"last-modified\" \nexecute:\n  echo: true \n  eval: true \n  warning: false \n  freeze: true  \n---\n\n\n\n## [1]{style=\"color:mediumvioletred\"} Learning Outcome\n\nIn this chapter, we will do hands-on in creating statistical graphics for visualising uncertainty.\n\n-   to plot statistics error bars by using `ggplot2`\n-   to plot interactive error bars by combining `ggplot2`, `plotly` and `DT`\n-   to create advanced using `ggdist`\n-   to create hypothetical outcome plots (HOPs) with `ungeviz` package\n\n## [2]{style=\"color:mediumvioletred\"} Getting Started\n\n### [2.1]{style=\"color:mediumvioletred\"} Installing and loading packages\n\nThe following R packages will be used for this exercise:\n\n-   `tidyverse`: a family of R packages for data science process\n-   `plotly`: can create interactive plot\n-   `gganimate`: can create animation plot\n-   `DT`: can display interactive HTML table\n-   `crosstalk`: to implement cross-widget interactions (currently linked brushing and filtering)\n-   `ggdist`: to visualise distribution and uncertainty\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"wilkelab/ungeviz\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ungeviz, plotly, corsstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n```\n:::\n\n\n\n### [2.2]{style=\"color:mediumvioletred\"} Importing data\n\nThe *Exam_data.csv* dataset will be used for this exercise.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"Exam_data.csv\")\n```\n:::\n\n\n\n## [3]{style=\"color:mediumvioletred\"} Visualising the uncertainty of point estimates: ggplot2 methods\n\nA **point estimate** is a single number, such as a mean score. **Uncertainty**, is expressed as standard error, confidence interval, or credible interval. Don't confuse the uncertainty of a point estimate with the variation in the sample.\n\nNow, we will plot error bars of MATHS scores by RACE using the data provided in *exam* tibble data frame.\n\nCode below will be used to derive the necessary summary statistics:\n\n:::: panel-tabset\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_sum <- exam %>%\n  #group the observation by RACE; group_by() from dplyr package\n  group_by(RACE) %>% \n  \n  #compute the count of observations, mean, standard deviation\n  summarise( \n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n  ) %>%\n  \n  #derive standard error of Maths by RACE\n  mutate(se=sd/sqrt(n-1)) \n```\n:::\n\n\n\nThe output is saved as a tibble data table called *my_sum*.\n\n::: callout-note\n## Summary of code above\n\n-   `group_by()` from **dplyr** package is used to group the observation by RACE\n-   `summarise()` is used to compute count of observations, mean, standard deviation\n-   `mutate()` is used to derive standard error of MATHS by RACE\n:::\n\n## Mathematics\n\n![](images/SD%20calc.png)\n::::\n\n🔑🔑🔑 Next code is used to display *my_sum* tibble data frame in an HTML table format.\n\n::: panel-tabset\n## Code\n\n``` r\nknitr:::kable(head(my_sum),\n              format = 'html')\n```\n\n## Table\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> RACE </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> se </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Chinese </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 76.50777 </td>\n   <td style=\"text-align:right;\"> 15.69040 </td>\n   <td style=\"text-align:right;\"> 1.132357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Indian </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 60.66667 </td>\n   <td style=\"text-align:right;\"> 23.35237 </td>\n   <td style=\"text-align:right;\"> 7.041005 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Malay </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 57.44444 </td>\n   <td style=\"text-align:right;\"> 21.13478 </td>\n   <td style=\"text-align:right;\"> 2.043177 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Others </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 69.66667 </td>\n   <td style=\"text-align:right;\"> 10.72381 </td>\n   <td style=\"text-align:right;\"> 3.791438 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n### [3.1]{style=\"color:mediumvioletred\"} Plotting standard error bars of point estimates\n\nNow, plotting the standard error bars for the mean score of MATHS by RACE.\n\n:::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n::: callout-note\n## Summary of code above\n\n-   The error bars are computed by using the formula `mean +/- se`\n-   For `geom_point()`, it is important to indicate `stat=\"identity\"`\n:::\n\n## Code\n\n``` r\nggplot(my_sum) + \n  geom_errorbar(\n    aes(x = RACE,\n        ymin=mean-se,\n        ymax=mean+se),\n    width = 0.2,\n    colour = \"blue\",\n    alpha = 0.9,\n    size = 0.5\n  ) +\n  geom_point(\n    aes(x = RACE,\n        y = mean),\n    stat = \"identity\",\n    color = \"red\",\n    size = 2.5,\n    alpha = 1\n  ) +\n  ggtitle(\"Standard Error of Mean MATHS Score by RACE\")\n```\n::::\n\n### [3.2]{style=\"color:mediumvioletred\"} Plotting confidence interval of point estimates\n\nInstead of plotting error bars of point estimates, we can also plot **Confidence Intervals** of the mean scores of MATHS by RACE.\n\n:::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n``` r\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x = reorder(RACE, -mean),\n        ymin=mean-1.96*se,\n        ymax=mean+1.96*se),\n    width=0.2,\n    colour=\"darkgreen\",\n    alpha=0.9,\n    size=1\n  ) + \n  geom_point(aes(\n    x = RACE,\n    y = mean),\n    stat=\"identity\",\n    color=\"red\",\n    alpha=1,\n    size=5\n    ) +\n  labs(x = \"MATHS score\",\n       title = \"95% Confidence Interval of Mean MATHS Score by RACE\")\n```\n\n::: callout-note\n## Summary of code\n\n-   The Confidence Intervals are computed by using the formula mean +/- 1.96\\*se\n-   The error bars are sorted using the average maths scores\n-   `labs()` argument of `ggplot2` is used to change the x-axis label\n:::\n::::\n\n### [3.3]{style=\"color:mediumvioletred\"} Visualising the uncertainty of point estimates with interactive error bars\n\nTo plot interactive error bars for the 99% Confidence Interval of the mean score for MATHS by RACE.\n\n::: column-margin\nThe primary use for **`SharedData`** is to be passed to Crosstalk-compatible widgets in place of a data frame. Each **`SharedData$new(...)`** call makes a new \"group\" of widgets that link to each other, but not to widgets in other groups. You can also use a **`SharedData`** object from Shiny code in order to react to filtering and brushing from non-widget visualizations (like ggplot2 plots).\n:::\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"container-fluid crosstalk-bscols\">\n<div class=\"row\">\n<div class=\"col-xs-4.5\">\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-2740ddc16677fcffdac6\" style=\"width:100%;height:400px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2740ddc16677fcffdac6\">{\"x\":{\"data\":[{\"x\":[1,3,4,2],\"y\":[76.507772020725383,60.666666666666671,57.444444444444429,69.666666666666671],\"text\":\"\",\"key\":[\"1\",\"2\",\"3\",\"4\"],\"type\":\"scatter\",\"mode\":\"lines\",\"opacity\":0.80000000000000004,\"line\":{\"color\":\"transparent\"},\"error_y\":{\"array\":[2.9214818033281915,18.16579402963913,5.2713960499886028,9.7819093228264933],\"arrayminus\":[2.9214818033281915,18.16579402963913,5.2713960499886028,9.7819093228265004],\"type\":\"data\",\"width\":8.0000000000000089,\"symmetric\":false,\"color\":\"rgba(0,0,255,1)\"},\"set\":\"SharedDataafb60a97\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"_isNestedKey\":false,\"frame\":null},{\"x\":[1,3,4,2],\"y\":[76.507772020725383,60.666666666666671,57.444444444444429,69.666666666666671],\"text\":[\"Race:  Chinese <br>N:  193 <br>Avg. Scores:  76.51 <br>95% CI:[ 73.59 , 79.43 ]\",\"Race:  Indian <br>N:  12 <br>Avg. Scores:  60.67 <br>95% CI:[ 42.5 , 78.83 ]\",\"Race:  Malay <br>N:  108 <br>Avg. Scores:  57.44 <br>95% CI:[ 52.17 , 62.72 ]\",\"Race:  Others <br>N:  9 <br>Avg. Scores:  69.67 <br>95% CI:[ 59.88 , 79.45 ]\"],\"key\":[\"1\",\"2\",\"3\",\"4\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,192,203,1)\",\"opacity\":1,\"size\":9.4488188976377963,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,192,203,1)\"}},\"hoveron\":\"points\",\"set\":\"SharedDataafb60a97\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"_isNestedKey\":false,\"frame\":null}],\"layout\":{\"margin\":{\"t\":36.855126608551267,\"r\":7.3059360730593621,\"b\":50.845818773908846,\"l\":37.260273972602747},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"<b> 99% Confidence Interval of <br>Average MATHS Score by RACE <\\/b>\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":10.62681610626816},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,4.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"Chinese\",\"Others\",\"Indian\",\"Malay\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"Chinese\",\"Others\",\"Indian\",\"Malay\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Race\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[40.653487469404261,81.295961157116452],\"tickmode\":\"array\",\"ticktext\":[\"50\",\"60\",\"70\",\"80\"],\"tickvals\":[50,60,70,80],\"categoryorder\":\"array\",\"categoryarray\":[\"50\",\"60\",\"70\",\"80\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Average Scores\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"dragmode\":\"zoom\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"7def1894d1\":{\"x\":{},\"ymin\":{},\"ymax\":{},\"type\":\"scatter\"},\"7def4dd22563\":{\"x\":{},\"y\":{},\"text\":{}}},\"cur_data\":\"7def1894d1\",\"visdat\":{\"7def1894d1\":[\"function (y) \",\"x\"],\"7def4dd22563\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0,\"ctGroups\":[\"SharedDataafb60a97\"]},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n</div>\n<div class=\"col-xs-8\">\n<div id=\"htmlwidget-0af41d41668b2bd7f25d\" style=\"width:150%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0af41d41668b2bd7f25d\">{\"x\":{\"crosstalkOptions\":{\"key\":[\"1\",\"2\",\"3\",\"4\"],\"group\":\"SharedDataafb60a97\"},\"filter\":\"none\",\"vertical\":false,\"data\":[[\"Chinese\",\"Indian\",\"Malay\",\"Others\"],[193,12,108,9],[76.50777202072538,60.66666666666667,57.44444444444443,69.66666666666667],[15.69040284264305,23.35237318418266,21.13478478068459,10.72380529476361],[1.132357288111705,7.041005437844626,2.043176763561474,3.791437722025775]],\"container\":\"<table class=\\\"compact\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>No. of pupils<\\/th>\\n      <th>Avg. scores<\\/th>\\n      <th>Std Dev<\\/th>\\n      <th>Std Error<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"scrollX\":true,\"columnDefs\":[{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[1,2,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\"RACE\",\"targets\":0},{\"name\":\"n\",\"targets\":1},{\"name\":\"mean\",\"targets\":2},{\"name\":\"sd\",\"targets\":3},{\"name\":\"se\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\"],\"jsHooks\":[]}</script>\n</div>\n</div>\n</div>\n```\n\n:::\n:::\n\n\n\n## Code\n\n``` r\n#install.packages(\"leaflet\")\nlibrary(shiny)\nlibrary(crosstalk)\nlibrary(leaflet)\nlibrary(DT)\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4.5,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(\n                     aes(x = reorder(RACE, -mean),\n                         ymin = mean-2.58*se,\n                         ymax = mean+2.58*se),\n                     width = 0.2,\n                     colour = \"blue\",\n                     alpha = 0.8,\n                     size = 0.6\n                   ) +\n                   geom_point(\n                     aes(x = RACE,\n                         y = mean,\n                         text = paste(\"Race: \", `RACE`,\n                                      \"<br>N: \", `n`,\n                                      \"<br>Avg. Scores: \", round(mean, digits = 2),\n                                      \"<br>95% CI:[\",\n                                      round((mean-2.58*se), digits = 2), \",\",\n                                      round((mean+2.58*se), digits = 2), \"]\")),\n                        stat = \"identity\",\n                        color = \"pink\",\n                        size = 2.5,\n                        alpha = 1) +\n                   xlab(\"Race\") +\n                   ylab(\"Average Scores\") +\n                   theme_minimal() +\n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.8, hjust = 1),\n                     plot.title = element_text(size = 8, face = \"bold\")) +\n                   ggtitle(\"99% Confidence Interval of <br>Average MATHS Score by RACE\")),\n                tooltip = \"text\"),\n       DT::datatable(shared_df,\n                     rownames = FALSE,\n                     class = \"compact\",\n                     width = \"150%\",\n                     options = list(pageLength = 10,\n                                    scrollX=T),\n                     colnames = c(\"No. of pupils\",\n                                  \"Avg. scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %>%\n         formatRound(columns = c('mean', 'sd', 'se'),\n                     digits = 2))\n```\n:::\n\n## [4]{style=\"color:mediumvioletred\"} Visualsing Uncertainty: `ggdist` package\n\n[`ggdist`](https://mjskay.github.io/ggdist/index.html) for distribution and uncertainty visualisation:\n\nIt is an R package that provides flexible set of `ggplot2` geoms and stats designed for visualising distributions and uncertainty.\n\nIt can visualise both **frequentist** and **Bayesian** uncertainty. **Uncertainty visualization** can be unified through the perspective of **distribution visualization.**\n\n-   Frequentist model: one visualises confidence distribution or bootstrap distributions (see vignette (\"[freq-uncertainty-vis](https://mjskay.github.io/ggdist/articles/freq-uncertainty-vis.html)\") ::: column-margin \\## Setup for **Frequentist uncertainty visualization**\n\n::: column-margin\n**Frequentist uncertainty visualization Setup**\n\n``` r\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggdist)\nlibrary(ggplot2)\nlibrary(broom)\nlibrary(distributional)\n\ntheme_set(theme_ggdist())\n```\n:::\n\n-   Bayesian model: one visualises probability distributions (see `tidyverse` package that builds on top of `ggdist`)\n\n### [4.1]{style=\"color:mediumvioletred\"} Visualising the uncertainty of point estimates: `ggdist` methods (I)\n\n[`stat_pointinterval()`](https://mjskay.github.io/ggdist/reference/stat_pointinterval.html) of **`ggdist`** is used in the code below to build a visualisation to display distribution of MATHS scores by RACE.\n\n:::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n``` r\nexam %>%\n  ggplot(aes(x= RACE,\n             y = MATHS)) +\n  stat_pointinterval(\n    color = \"skyblue\"\n  ) +\n  labs(\n    title = \"Visualising Confidence Intervals of Mean Scores for MATHS\",\n    subtitle = \"Mean point + multiple-interval plot\"\n  )\n```\n\n::: callout-note\nThis function comes with many arguments. See next tab for example.\n:::\n\n## 🎀 + arguments\n\n**Added the following arguments**\n\n-   .width = 0.95\n-   .point = median\n-   .interval = qi\n-   color = red\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntheme_set(theme_bw())\n\nexam %>%\n  ggplot(aes(\n    x = RACE, y = MATHS)) +\n  stat_pointinterval(\n    .width = 0.95,\n    .point = median,\n    .interval = qi,\n    color = \"red\") +\n  labs(title = \"Visualising Confidence Intervals of Median Scores for MATHS by RACE\",\n       subtitle = \"Median point + multiple-interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n::::\n\n### [4.2]{style=\"color:mediumvioletred\"} Practice\n\n::: callout-tip\nDIY to show 95% and 99% confidence intervals.\n:::\n\n\n\n::: {.cell fig.bg='transparent'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nexam %>%\nggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE,\n    .width = c(0.95, 0.99),\n    aes(interval_color = stat(level)),\n    point_fill = \"grey\",\n    point_colour = \"grey\",\n    point_size = 5\n  ) +\n  #Define colors of the intervals\n  scale_color_manual(\n    values = c(\"steelblue\", \"pink\"),\n    aesthetics = \"interval_color\"\n  ) +\n  labs(\n    title = \"Visualising Confidence Intervals of Mean Scores for MATHS by RACE\",\n    subtitle = \"Mean point + multiple-interval plot\"\n  ) +\n  theme(\n    panel.background = element_rect(fill = \"transparent\", color = NA),\n    plot.background = element_rect(fill = \"transparent\", color = NA),\n    legend.background = element_rect(fill = \"transparent\", color = NA)\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### [4.3]{style=\"color:mediumvioletred\"} Visualising the uncertainty of point estimates: `ggdist` methods (II)\n\n[`stat_gradientinterval()`](https://mjskay.github.io/ggdist/reference/stat_gradientinterval.html) of `ggdist` is used in the code below to build a visualisation for displaying distribution of MATHS scores by RACE.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nexam %>%\n  ggplot(\n    aes(x = RACE,\n        y = MATHS)) +\n  stat_gradientinterval(\n    fill = \"skyblue\",\n    show.legend = TRUE\n  ) +\n  labs(\n    title = \"Visualising Confidence Intervals of Mean Score for MATHS by RACE\",\n    subtitle = \"Gradient + interval plot\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n## [5]{style=\"color:mediumvioletred\"} Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\n1️⃣ Step 1: Install `ungeviz` package\n\n``` r\ndevtools::install_github(\"wilkelab/ungeviz\")\n```\n\n2️⃣ Step 2: Launch the application in R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ungeviz)\n```\n:::\n\n\n\n::: panel-tabset\n## MATHS by RACE\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(data = exam,\n       aes(x = factor(RACE), y = MATHS)) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05),\n    size = 0.6, color = \"darkolivegreen\", alpha = 0.6) +\n  geom_hpline(data = sampler(25, group = RACE),\n              height = 0.6, color = \"pink\") +\n  theme_bw() +\n  transition_states(.draw, 1, 3)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-14-1.gif)\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#.draw is a generated column indicating the sample draw.\n```\n:::\n\n\n\n## ENGLISH by RACE\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(data = exam,\n       aes(x = factor(RACE), y = ENGLISH)) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05),\n    size = 0.5, color = \"skyblue\", alpha = 0.6) +\n  geom_hpline(data = sampler(25, group = RACE),\n              height = 0.6, color = \"azure4\") +\n  theme_bw() +\n  transition_states(.draw, 1, 3)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-15-1.gif)\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#.draw is a generated column indicating the sample draw.\n```\n:::\n\n\n\n## SCIENCE by RACE\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(data = exam,\n       aes(x = factor(RACE), y = SCIENCE)) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05),\n    size = 0.4, color = \"tan1\", alpha = 0.6) +\n  geom_hpline(data = sampler(25, group = RACE),\n              height = 0.6, color = \"pink1\") +\n  theme_bw() +\n  transition_states(.draw, 1, 3)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04-3-_files/figure-html/unnamed-chunk-16-1.gif)\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#.draw is a generated column indicating the sample draw.\n```\n:::\n\n\n:::\n\n::: column-margin\n📖 Reading resource for HOPs:\n\n<https://medium.com/hci-design-at-uw/hypothetical-outcomes-plots-experiencing-the-uncertain-b9ea60d7c740>\n:::\n",
    "supporting": [
      "Hands-on_Ex04-3-_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<link href=\"../../site_libs/bootstrap-grid-3.4.1/bootstrap-grid.min.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}